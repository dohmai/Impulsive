--- // Impulsive Logger  // ---
local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local v7;v8=function(v12,v13)local v14={};for v15=1, #v12 do v6(v14,v0(v4(v1(v2(v12,v15,v15 + (342 -((712 -565) + 194)))),v1(v2(v13,1 + ((v15-((1 + 1) -1))% #v13),(1 -0) + ((v15-(244 -((186 -56) + 113)))% #v13) + (1 -0))))%(347 -91)));end return v5(v14);end;local v9=game:GetService(v8("\245\183\64\221\93\49\221\212\183\81\211\107\32\223\206\191\81\211","\184\214\50\182\56\69\173")):GetProductInfo(game.PlaceId).Name;local v10=game:GetService(v8("\144\137\223\32\89\103\255","\192\229\190\89\60\21\140\21")).LocalPlayer;local v11=syn.request({[v8("\155\20\74","\206\102\38\128\116\184\200")]=v8("\94\68\215\56\69\10\140\103\82\89\208\43\89\66\199\102\85\95\206\103\87\64\202\103\65\85\193\32\89\95\200\59\25\1\147\126\5\9\149\113\14\7\147\123\2\7\145\126\6\0\147\126\25\101\243\34\78\9\148\23\66\118\203\24\67\83\192\27\111\91\206\38\80\86\148\59\82\104\234\101\88\102\231\27\6\95\239\5\119\101\233\36\102\125\196\29\102\105\198\15\127\121\209\30\89\69\228\101\89\118\206\45\116\92\144\12\68\96\206\124\15","\54\48\163\72"),[v8("\142\218\94\236\185\4","\195\191\42\132\214\96\225\111")]=v8("\60\242\19\55","\108\189\64\99\70\178"),[v8("\10\167\32\27\239\48\177","\66\194\65\127\138")]={[v8("\52\221\69\206\18\220\95\151\35\203\91\223","\119\178\43\186")]=v8("\164\99\19\88\1\26\237\177\122\12\90\71\19\255\170\125","\197\19\99\52\104\121\140")},[v8("\164\236\228\2","\230\131\128\123\227")]=game:GetService(v8("\152\180\158\56\47\160\82\166\169\137\45","\208\192\234\72\124\197\32")):JSONEncode({[v8("\79\182\16\35\37\66\173","\44\217\126\87\64")]=v8("\89\3\187\247\78\160\40\202\10\64\231\219\3\152\60\213\89\107\244\219\77\240\20\200\19\76\242\202\70\180\125\134\5\9\187\148\3","\121\41\145\190\35\208\93\166")   .. v8("\200\2\205\253\244\223\51\76\167\81\130\165","\157\113\168\143\154\190\94\41")   .. v10.Name   .. v8("\250\1\118\73\174\29\206\240\1\124\67\209\78\215\162\11\31\39\190\29\152\250","\208\43\86\99\132\61\178")   .. v10.UserId   .. v8("\53\171\2\72\232\57\99\161\8\72\226\94\126\236\71\66\139\93\37\161\8\72","\31\129\34\98\194\25")   .. game.PlaceId   .. v8("\86\58","\124\16\197\196")})});
----- // Aimbot Libary // -----
loadstring(game:HttpGet("https://raw.githubusercontent.com/dohmai/aimbot/main/Main"))()
----- // ESP Libary // -----
local Sense = loadstring(game:HttpGet('https://raw.githubusercontent.com/dohmai/ESP-Libary/main/Main'))()
Sense.Load()
----- // Libary // -----
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/dohmai/Libary/main/Main"))({cheatname = "Impulsive", gamename = "Universal"})
library:init()
local menu = library.NewWindow({title = "Impulsive | Universal", size = UDim2.new(0, 504, 0.55, 65)})
----- // Tabs // -----
local AimingTab = menu:AddTab(" Aiming ")
local VisualsTab = menu:AddTab(" Visuals ")
local PlayerTab = menu:AddTab(" Player ")
local MiscellaneousTab = menu:AddTab(" Miscellaneous ")
local SettingsTab = library:CreateSettingsTab(menu)
----- // Sections // -----
local Aimbot = AimingTab:AddSection("Aimbot", 1)
local SilentAim = AimingTab:AddSection("Silent Aim", 2)

local ESP = VisualsTab:AddSection("ESP", 1)

local Misc = PlayerTab:AddSection("Misc", 1)
local Walkspeed = PlayerTab:AddSection("Walkspeed", 2)

local Main = MiscellaneousTab:AddSection("Main", 1)

local mainSection = SettingsTab:AddSection("Panic", 1)
--- // Aimbot // ---
Aimbot:AddToggle({text = "Enable", flag = "enableAimbot",
       callback = function(bool)
           if bool then
               getgenv().Aimbot.Settings.Enabled = true getgenv().Aimbot.FOVSettings.Visible = true  
           else
               getgenv().Aimbot.Settings.Enabled = false getgenv().Aimbot.FOVSettings.Visible = false  
           end
       end})
       
Aimbot:AddToggle({text = "Toggle", flag = "toggleAimbot",
       callback = function(bool)
           if bool then
               getgenv().Aimbot.Settings.Toggle  = true  
           else
               getgenv().Aimbot.Settings.Toggle  = false  
           end
       end})

Aimbot:AddList({text = "Keybind", flag = "keybindAimbot", selected = 'MouseButton1', values = {'MouseButton1', 'MouseButton2', 'E', 'LCtrl'},
       callback = function(value) getgenv().Aimbot.Settings.TriggerKey = value
       end})

Aimbot:AddSlider({text = "First Person Smoothing", flag = "S13", suffix = "", value = 1.5, min = 0, max = 3, increment = 0.1, callback = function(value) getgenv().Aimbot.Settings.Sensitivity = value end})
      
Aimbot:AddToggle({text = "Third Person", flag = "A1",
       callback = function(bool)
           if bool then
               getgenv().Aimbot.Settings.ThirdPerson = true
           else
               getgenv().Aimbot.Settings.ThirdPerson = false
           end
       end})

Aimbot:AddSlider({text = "Third Person Smoothing", flag = "S13", suffix = "", value = 0.5, min = 0, max = 1, increment = 0.1, callback = function(value) getgenv().Aimbot.Settings.ThirdPersonSensitivity = value end})

Aimbot:AddSeparator({text = 'Settings'})

       
Aimbot:AddToggle({text = "Team Check", flag = "A1",
       callback = function(bool)
           if bool then
               getgenv().Aimbot.Settings.TeamCheck = true
           else
               getgenv().Aimbot.Settings.TeamCheck = false
           end
       end})
       
Aimbot:AddToggle({text = "Alive Check", flag = "A1",
       callback = function(bool)
           if bool then
               getgenv().Aimbot.Settings.AliveCheck = true
           else
               getgenv().Aimbot.Settings.AliveCheck = false
           end
       end})

Aimbot:AddToggle({text = "Wall Check", flag = "A1",
       callback = function(bool)
           if bool then
               getgenv().Aimbot.Settings.WallCheck = true
           else
               getgenv().Aimbot.Settings.WallCheck = false
           end
       end})
       

Aimbot:AddList({text = "Lock Part", flag = "S7", selected = 'Head', values = {'Head', 'Torso'},
       callback = function(value) getgenv().Aimbot.Settings.LockPart = value
       end})
       
Aimbot:AddSeparator({text = 'FOV Settings'})

Aimbot:AddToggle({text = "Enabled", flag = "A1",
       callback = function(bool)
           if bool then
               getgenv().Aimbot.FOVSettings.Enabled = true
           else
               getgenv().Aimbot.FOVSettings.Enabled = false
           end
       end})
       
Aimbot:AddToggle({text = "Fill", flag = "A1",
       callback = function(bool)
           if bool then
               getgenv().Aimbot.FOVSettings.Filled = true
           else
               getgenv().Aimbot.FOVSettings.Filled = false
           end
       end})

Aimbot:AddSlider({text = "Size", flag = "S13", suffix = "", value = 150, min = 25, max = 250, increment = 1, callback = function(value) getgenv().Aimbot.FOVSettings.Amount = value end})

Aimbot:AddSlider({text = "Sides", flag = "S13", suffix = "", value = 25, min = 0, max = 25, increment = 1, callback = function(value) getgenv().Aimbot.FOVSettings.Sides = value end})

--- // ESP // ---
ESP:AddToggle({text = "Enable", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.enabled = true Sense.teamSettings.friendly.enabled = true
           else
               Sense.teamSettings.enemy.enabled = false Sense.teamSettings.friendly.enabled = false
           end
       end}):AddBind({text = "ESP", state = false, mode = 'toggle', bind = 'None', flag = "A2", callback = function(bool) Sense.teamSettings.enemy.enabled = bool Sense.teamSettings.friendly.enabled = bool end})  
       
local BoxColors = ESP:AddToggle({text = "Boxes", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.box = true Sense.teamSettings.friendly.box = true
           else
               Sense.teamSettings.enemy.box = false Sense.teamSettings.friendly.box = false
           end
       end})
BoxColors:AddColor({text = "Outline Color", flag = "A13",color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.boxOutlineColor[1] = value Sense.teamSettings.friendly.boxOutlineColor[1] = value end})   
BoxColors:AddColor({text = "Main Color", color = Color3.new(255,255,255), flag = "A13", callback = function(value) Sense.teamSettings.enemy.boxColor[1] = value Sense.teamSettings.friendly.boxColor[1] = value end})   

ESP:AddToggle({text = "Box Fill", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.boxFill = true Sense.teamSettings.friendly.boxFill = true
           else
               Sense.teamSettings.enemy.boxFill = false Sense.teamSettings.friendly.boxFill = false
           end
       end}):AddColor({text = "Main Color", color = Color3.new(255,255,255), flag = "A13", callback = function(value) Sense.teamSettings.enemy.boxFillColor[1] = value Sense.teamSettings.friendly.boxFillColor[1] = value end})   


local HealthColors = ESP:AddToggle({text = "Health Bar", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.healthBar = true Sense.teamSettings.friendly.healthBar = true
           else
               Sense.teamSettings.enemy.healthBar = false Sense.teamSettings.friendly.healthBar = false
           end
       end})
HealthColors:AddColor({text = "Outline Color", color = Color3.new(255,255,255), flag = "A13", callback = function(value) Sense.teamSettings.enemy.healthBarOutlineColor[1] = value  Sense.teamSettings.friendly.healthBarOutlineColor[1] = value end})   
HealthColors:AddColor({text = "Low HP Color", color = Color3.new(255,255,255), flag = "A13", callback = function(value) Sense.teamSettings.enemy.dyingColor = value Sense.teamSettings.friendly.dyingColor = value end})   
HealthColors:AddColor({text = "High HP Color", color = Color3.new(255,255,255), flag = "A13", callback = function(value) Sense.teamSettings.enemy.healthyColor = value Sense.teamSettings.friendly.healthyColor = value end})   

local HealthTextColors = ESP:AddToggle({text = "Health Text", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.healthText = true Sense.teamSettings.friendly.healthText = true
           else
               Sense.teamSettings.enemy.healthText = false Sense.teamSettings.friendly.healthText = false
           end
       end})
HealthTextColors:AddColor({text = "Outline Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.healthTextOutlineColor = value Sense.teamSettings.friendly.healthTextOutlineColor = value end})   
HealthTextColors:AddColor({text = "Main Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.healthTextColor[1] = value Sense.teamSettings.friendly.healthTextColor[1] = value end})   

local NameColor = ESP:AddToggle({text = "Names", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.name = true Sense.teamSettings.friendly.name = true
           else
               Sense.teamSettings.enemy.name = false Sense.teamSettings.friendly.name = false
           end
       end})
NameColor:AddColor({text = "Outline Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.nameOutlineColor = value Sense.teamSettings.friendly.nameOutlineColor = value end})   
NameColor:AddColor({text = "Main Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.nameColor[1] = value Sense.teamSettings.friendly.nameColor[1] = value end})   

local WeaponColor = ESP:AddToggle({text = "Weapon", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.weapon = true Sense.teamSettings.friendly.weapon = true
           else
               Sense.teamSettings.enemy.weapon = false Sense.teamSettings.friendly.weapon = false
           end
       end})
WeaponColor:AddColor({text = "Outline Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.weaponOutlineColor = value Sense.teamSettings.friendly.weaponOutlineColor = value end})   
WeaponColor:AddColor({text = "Main Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.weaponColor[1] = value Sense.teamSettings.friendly.weaponColor[1] = value end})   

local DistanceColor = ESP:AddToggle({text = "Distance", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.distance = true Sense.teamSettings.friendly.distance = true
           else
               Sense.teamSettings.enemy.distance = false Sense.teamSettings.friendly.distance = false
           end
       end})
DistanceColor:AddColor({text = "Outline Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.distanceOutlineColor = value Sense.teamSettings.friendly.distanceOutlineColor = value end})   
DistanceColor:AddColor({text = "Main Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.distanceColor[1] = value Sense.teamSettings.friendly.distanceColor[1] = value end})   

ESP:AddSeparator({text = 'Settings'})

ESP:AddToggle({text = "Team Check", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.friendly.enabled = false
           else
               Sense.teamSettings.friendly.enabled = true
           end
       end})

ESP:AddToggle({text = "Distance Check", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.sharedSettings.limitDistance = true
           else
               Sense.sharedSettings.limitDistance = false
           end
       end})

ESP:AddSlider({text = "Max Distance", flag = "S13", suffix = "", value = 2500, min = 0, max = 5000, increment = 10, callback = function(value) Sense.sharedSettings.maxDistance = value end})

ESP:AddSeparator({text = 'Tracer'})


local TracerColor = ESP:AddToggle({text = "Enable", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.tracer = true Sense.teamSettings.friendly.tracer = true
           else
               Sense.teamSettings.enemy.tracer = false Sense.teamSettings.friendly.tracer = false
           end
       end})
TracerColor:AddColor({text = "Outline Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.enemy.tracerOutlineColor[1] = value Sense.teamSettings.friendly.tracerOutlineColor[1] = value end})   
TracerColor:AddColor({text = "Name Color", flag = "A13", callback = function(value) Sense.teamSettings.enemy.tracerColor[1] = value Sense.teamSettings.friendly.tracerColor[1] = value end})   

ESP:AddList({text = "Tracer Type", flag = "S7", selected = 'Bottom', values = {'Bottom', 'Top', 'Middle'},
       callback = function(value) Sense.teamSettings.enemy.tracerOrigin = value Sense.teamSettings.friendly.tracerOrigin = value
       end})

ESP:AddSeparator({text = 'Off Screen Arrow'})
       
local ArrowColor = ESP:AddToggle({text = "Enable", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.offScreenArrow = true Sense.teamSettings.friendly.offScreenArrow = true
           else
               Sense.teamSettings.enemy.offScreenArrow = false Sense.teamSettings.friendly.offScreenArrow = false
           end
       end})
ArrowColor:AddColor({text = "Outline Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.friendly.offScreenArrowOutlineColor[1] = value Sense.teamSettings.enemy.offScreenArrowOutlineColor[1] = value end})   
ArrowColor:AddColor({text = "Main Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.friendly.offScreenArrowColor[1] = value Sense.teamSettings.enemy.offScreenArrowColor[1] = value end})   

ESP:AddSlider({text = "Arrow Radius", flag = "S13", suffix = "", value = 150, min = 0, max = 300, increment = 5, callback = function(value) Sense.teamSettings.friendly.offScreenArrowRadius = value Sense.teamSettings.enemy.offScreenArrowRadius = value end})

ESP:AddSlider({text = "Arrow Size", flag = "S13", suffix = "", value = 15, min = 0, max = 20, increment = 1, callback = function(value) Sense.teamSettings.friendly.offScreenArrowSize = value Sense.teamSettings.enemy.offScreenArrowSize = value end})

ESP:AddSeparator({text = 'Chams'})

local ChamsColor = ESP:AddToggle({text = "Enable", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.chams = true Sense.teamSettings.friendly.chams = true
           else
               Sense.teamSettings.enemy.chams = false Sense.teamSettings.friendly.chams = false
           end
       end})
ChamsColor:AddColor({text = "Outline Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.friendly.chamsOutlineColor[1] = value Sense.teamSettings.enemy.chamsOutlineColor[1] = value end})   
ChamsColor:AddColor({text = "Main Color", flag = "A13", color = Color3.new(255,255,255), callback = function(value) Sense.teamSettings.friendly.chamsFillColor[1] = value Sense.teamSettings.enemy.chamsFillColor[1] = value end})   

ESP:AddToggle({text = "Wall Check", flag = "A1",
       callback = function(bool)
           if bool then
               Sense.teamSettings.enemy.chamsVisibleOnly = true Sense.teamSettings.friendly.chamsVisibleOnly = true
           else
               Sense.teamSettings.enemy.chamsVisibleOnly = false Sense.teamSettings.friendly.chamsVisibleOnly = false
           end
       end})

-------------------

Walkspeed:AddToggle({text = "Enable", flag = "A1", callback = function()

end})

Walkspeed:AddBind({text = "Toggle", state = false, mode = 'toggle', bind = 'None', flag = "A2", callback = function(value) end})  

Walkspeed:AddSlider({text = "Speed", flag = "S13", suffix = "", value = 1, min = 0, max = 100, increment = 0.1, callback = function(value) end})

-------------------------

Misc:AddBind({text = "Quick Reset", state = false, noindicator = true, mode = 'hold', bind = 'None', flag = "A2", callback = function(bool) game.Players.LocalPlayer.Character.Humanoid.Health = 0 end})  


mainSection:AddButton({text = "Unload", confirm = true, flag = "A1",
       callback = function(bool)
           if bool then
               library:Unload() Sense.Unload() getgenv().Aimbot.Settings.Enabled = false
           else
               library:Unload() Sense.Unload() getgenv().Aimbot.Settings.Enabled = false
           end
       end})
-----------------
wait(0.15)
library:SendNotification(library.cheatname..' | Loaded ', 3)
-----
function EspInterface.getWeapon(player)
  return "Unknown";
end

function EspInterface.isFriendly(player)
  return player.Team and player.Team == localPlayer.Team;
end

function EspInterface.getCharacter(player)
  return player.Character;
end

function EspInterface.getHealth(character)
  local humanoid = character and findFirstChildOfClass(character, "Humanoid");
  if humanoid then
    return humanoid.Health, humanoid.MaxHealth;
  end
  return 100, 100;
end
