--- // Start Settings // ---
----- // Libary // -----
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/dohmai/Libary/main/Main"))({cheatname = "Niggaware", gamename = "Universal"})
library:init()
local menu = library.NewWindow({title = "                               Gamesense ", size = UDim2.new(0, 504, 0.5, 65)})
----- // Tabs // -----
local AimingTab = menu:AddTab(" Aiming ")
local VisualsTab = menu:AddTab(" Visuals ")
local PlayerTab = menu:AddTab(" Player ")
local MiscellaneousTab = menu:AddTab(" Miscellaneous ")
local SettingsTab = library:CreateSettingsTab(menu)
----- // Sections // -----
local Aimbot = AimingTab:AddSection("Aimbot", 1)
local SilentAim = AimingTab:AddSection("Silent Aim", 2)

local ESP = VisualsTab:AddSection("Player ESP", 1)


local FOV = PlayerTab:AddSection("FOV", 1)
local ThirdPerson = PlayerTab:AddSection("Third Person", 1)
local Walkspeed = PlayerTab:AddSection("Walkspeed", 2)
local Fly = PlayerTab:AddSection("Fly", 2)
local FakeLag = PlayerTab:AddSection("Fake Lag", 2)

local Main = MiscellaneousTab:AddSection("Main", 1)

--- // Aimbot // ---
Aimbot:AddToggle({text = "Enable", flag = "A1",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddBind({text = "Aimbot", state = false, mode = 'hold', bind = 'None', flag = "A2", callback = function(bool) end})  


Aimbot:AddToggle({text = "Sticky Aim", flag = "A3",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end})

Aimbot:AddToggle({text = "Team Check", flag = "A4",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end})   
       
Aimbot:AddToggle({text = "Wall Check", flag = "A5",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}) 

Aimbot:AddToggle({text = "Health Check", flag = "A6",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end})  
       
Aimbot:AddList({text = "Hitpart", flag = "A7", selected = 'None', values = {'Head', 'Torso'},
       callback = function()
       end}) 

Aimbot:AddList({text = "Prioritize", flag = "A8", selected = 'None', values = {'Cursor', 'Distance', 'Lowest Health'},
       callback = function()
       end})      
       
Aimbot:AddSlider({text = "Smoothness", flag = "A9", suffix = "", min = 0, max = 100, increment = .1})

Aimbot:AddSeparator({text = "Visuals"})

Aimbot:AddToggle({text = "Show Target", flag = "A10",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddColor({text = "Show FOV", flag = "A11", callback = function(bool) end})   
       
Aimbot:AddToggle({text = "Show FOV", flag = "A12",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddColor({text = "Show FOV", flag = "A13", callback = function(bool) end})   
       
Aimbot:AddSlider({text = "FOV Radius", flag = "A14", suffix = "", min = 0, max = 100, increment = .1})

Aimbot:AddSeparator({text = "Cursor Offset"})

Aimbot:AddSlider({text = "X Offset", flag = "A15", suffix = "", min = -250, max = 250, increment = .1})

Aimbot:AddSlider({text = "Y Offset", flag = "A16", suffix = "", min = -250, max = 250, increment = .1})

Aimbot:AddSeparator({text = "Triggerbot"})

Aimbot:AddToggle({text = "Enable", flag = "A17",
       callback = function(bool)
           if bool then
               print("Aimbot Enabled")
           else
               print("Aimbot Disabled")
           end
       end}):AddBind({text = "Triggerbot", state = false, mode = 'toggle', bind = 'None', flag = "A18", callback = function(bool) end})  

Aimbot:AddSlider({text = "Reaction Time", flag = "A19", suffix = "ms", min = 0, max = 500, increment = 1})
--- // Silent Aim // ---
SilentAim:AddToggle({text = "Enable", flag = "S1",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddBind({text = "Silent Aim", state = false, mode = 'toggle', bind = 'None', flag = "S2", callback = function(bool) end})  

SilentAim:AddToggle({text = "Sticky Aim", flag = "S3",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end})

SilentAim:AddToggle({text = "Team Check", flag = "S4",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end})   
       
SilentAim:AddToggle({text = "Wall Check", flag = "S5",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}) 

SilentAim:AddToggle({text = "Health Check", flag = "S6",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end})  
       
SilentAim:AddList({text = "Hitpart", flag = "S7", selected = 'None', values = {'Head', 'Torso'},
       callback = function()
       end}) 
       
SilentAim:AddSlider({text = "Hit Chance", flag = "S8", suffix = "%", min = 0, max = 100, increment = 1})

SilentAim:AddSeparator({text = "Visuals"})

SilentAim:AddToggle({text = "Show Target", flag = "S9",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddColor({text = "Show FOV", flag = "S10", callback = function(bool) end})   
       
SilentAim:AddToggle({text = "Show FOV", flag = "S11",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddColor({text = "Show FOV", flag = "S12", callback = function(bool) end})   
       
SilentAim:AddSlider({text = "FOV Radius", flag = "S13", suffix = "", min = 0, max = 100, increment = .1})
--- // ESP // ---


--- // Movement // ---
Walkspeed:AddToggle({text = "Enable", risky = true, flag = "",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddBind({text = "Walkspeed", state = false, mode = 'toggle', bind = 'None', flag = "a", callback = function(bool) end})  

Walkspeed:AddSlider({text = "Speed", risky = true, flag = '"', suffix = "", min = 0, max = 5, increment = .1})

Fly:AddToggle({text = "Enable", risky = true, flag = "a",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddBind({text = "Fly", state = false, mode = 'toggle', bind = 'None', flag = "a", callback = function(bool) end})  

Fly:AddSlider({text = "Speed", risky = true, flag = '"', suffix = "", min = 0, max = 5, increment = .1})

FakeLag:AddToggle({text = "Enable", risky = true, flag = "a",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddBind({text = "Fake Lag", state = false, mode = 'toggle', bind = 'None', flag = "a", callback = function(bool) end})  

FakeLag:AddSlider({text = "Intensity", risky = true, flag = '"', suffix = "", min = 0, max = 10, increment = 1})

FOV:AddSlider({text = "Value", risky = false, flag = '"', suffix = "", min = 70, max = 120, increment = 1, value = 070, callback = function(value)
end})

ThirdPerson:AddToggle({text = "Enable", risky = false, flag = "a",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end}):AddBind({text = "Third Person", state = false, mode = 'toggle', bind = 'None', flag = "a", callback = function(bool) end})  


ThirdPerson:AddSlider({text = "Distance", risky = false, flag = '"', suffix = "", min = 0, max = 15, increment = 1, value = 0})
--- // Miscellaneous // ---
Main:AddToggle({text = "Join Logs", risky = false, flag = "a",
       callback = function(bool)
           if bool then
               
           else
               
           end
       end})
       
Main:AddToggle({text = "Leave Logs", risky = false, flag = "a",
       callback = function(bool)
           if bool then
               
           else
               
           end
       end})
       
Main:AddToggle({text = "Staff Viewer", risky = false, flag = "a",
       callback = function(bool)
           if bool then
               print("Toggle")
           else
               print("Untoggle")
           end
       end})
----- // Test // -----
_G.pveye = false
while _G.pveye == true do
 library:SendNotification(library.cheatname..' | PVEYE Detected ', 1);
 wait(1.3)
end

game:GetService("Players").PlayerAdded:Connect(function(player)
    library:SendNotification(player.Name..' | Joined ', 3);
end)
            
game:GetService("Players").PlayerRemoving:Connect(function(player)
    library:SendNotification(player.Name..' | Left ', 3);
end)
----- // Notification // -----
wait(0.15)
library:SendNotification(library.cheatname..' | Loaded ', 3)
